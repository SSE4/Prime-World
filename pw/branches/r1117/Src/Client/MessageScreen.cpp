#include "stdafx.h"
#include "MessageScreen.h"
#include "MessageScreenLogic.h"
#include "../UI/Root.h"
#include "../UI/ScreenLogicBase.h"
#include "../UI/Window.h"
#include "../Scripts/Script.h"


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
namespace NMainLoop
{
  
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
MessageScreen::MessageScreen() :
screenTransparent( true )
{
  eventsUI.AddActivationHandler( "dialog_escape", &MessageScreen::MsgOnEscapeKey );
}



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
void MessageScreen::Configure(IMessageScreenCallback * _callback, const string & _screenId)
{
  callback = _callback;
  screenId = _screenId;
}



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool MessageScreen::Init( UI::User * uiUser )
{
  logic = new UI::MessageScreenLogic;
  SetLogic( logic );
  logic->SetScreen( this );
  logic->SetUser( uiUser );

  logic->LoadScreenLayout(screenId);

  if(IMessageScreenCallback * cb = GetCallback())
  {
    cb->SetupMessageWindow(logic->GetBaseWindow());
  }

  return true;
}



//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
bool MessageScreen::MsgOnEscapeKey()
{
  NI_VERIFY( logic, "", return false );
  logic->EscapeKeyPressed();
  return false;
}

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
} //namespace NMainLoop


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
NI_DEFINE_REFCOUNT( NMainLoop::IMessageScreenCallback );
NI_DEFINE_REFCOUNT( NMainLoop::MessageScreen );
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
